apply plugin: 'java'
apply plugin: 'application'

group = "nl.surfsara.hadoop"

mainClassName = "nl.surfsara.hadoop.mtchadoop.Main"

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    maven { url 'http://conjars.org/repo' }
    mavenCentral()
    jcenter()
}

configurations {
    providedCompile
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.13'
    providedCompile 'org.apache.hadoop:hadoop-client:2.7.1'
    compile 'cascading:cascading-core:3.1.0'
    compile 'cascading:cascading-hadoop:3.1.0'
    compile 'org.json:json:20160212'

    testCompile 'junit:junit:4.12'
}

compileJava {
    sourceSets.main.compileClasspath += configurations.providedCompile
}

run {
    classpath += configurations.providedCompile
}

jar {
    into('lib'){
        from configurations.compile
    }
    manifest {
        attributes(
                'Main-Class': mainClassName,
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}

startScripts {
    String scriptText = new File("src/main/resources/unixstartscript.template").text
    unixStartScriptGenerator.template = resources.text.fromString(scriptText)
    doLast {
        delete windowsScript
    }
}

//distributions {
//    main {
//        contents {
//            from { 'src/main/resources/log4j.properties' }
//        }
//    }
//}
